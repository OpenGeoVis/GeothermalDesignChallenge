.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_project_data-aggregation_01-gis.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_project_data-aggregation_01-gis.py:


GIS Data
~~~~~~~~

Convert all the GIS data to OMF

Be sure to install ``gdal``::

    conda install gdal

.. code-block:: default



    # Import project package
    import gdc19








.. code-block:: default


    import pyvista
    import omf
    import omfvista
    import pandas as pd
    import numpy as np








First, get the land surface to match Z-coordinates of shape files with
the topography.


.. code-block:: default


    description='vertices of meshed/interpolated surfaces of the ' \
        'land surface (based on 10-meter DEM) used in the Phase 2B '\
        'earth model. All data are georeferenced to UTM, zone 12N, '\
        'NAD 83, NAVD 88.'

    land_surface = gdc19.surf_to_omf(
        'land_surface_vertices.csv',
        'land_surface',
        description
        )
    land_surface.validate()
    topo = omfvista.wrap(land_surface)







Load the shape files


.. code-block:: default

    shapes = gdc19.read_shape_file_to_omf(
        gdc19.get_shp_path('FORGE_Outline'), topo_points=topo.points
    )
    shapes








.. code-block:: default


    boundary = shapes[0]
    boundary.name = 'boundary'
    boundary.validate()








.. code-block:: default

    omfvista.wrap(boundary).plot(show_edges=False)





.. image:: /project/data-aggregation/images/sphx_glr_01-gis_001.png
    :class: sphx-glr-single-img




Now save out the GIS data to an OMF project file


.. code-block:: default


    proj = omf.Project(
        name='FORGE GIS Data',
        description='All GIS data for the 2019 FORGE Geothermal Student Competition '
    )

    proj.elements = [ boundary ]

    proj.validate()







Save the GIS project file


.. code-block:: default


    omf.OMFWriter(proj, gdc19.get_project_path('gis.omf'))







.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  32.281 seconds)


.. _sphx_glr_download_project_data-aggregation_01-gis.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: 01-gis.py <01-gis.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: 01-gis.ipynb <01-gis.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_
